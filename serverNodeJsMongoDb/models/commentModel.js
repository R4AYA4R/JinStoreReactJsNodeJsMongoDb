

// если сохранили схему(Schema) для объектов в базе данных и она уже добавилась в mongodb,и мы хотим изменить ее,добавить или убрать ей поля,то нужно удалить ее из mongodb полностью,а потом сохранить в коде уже с изменениями,иначе не будет работать

// сразу лучше сделать авторизацию пользователей,а потом уже логику создания комментариев,так как там будем работать с пользователями

import { model, Schema } from "mongoose";

// создаем schema(схему),она описывает какие поля будет содержать сущность(в данном случае товара) в базе данных mongodb,указываем поле name с типом String,указываем,что оно будет уникальное(unique:true),то есть одинаковых таких записей в базе данных быть не должно,и указываем,что оно должно быть обязательным(required:true),и также указываем другие поля 
const CommentSchema = new Schema({

    name:{type:String,required:true},

    text:{type:String,required:true},

    rating:{type:Number,required:true}, // указываем этому полю для рейтинга комментария(рейтинг,который укажет пользователь при создании комментария) тип данных как Number,в этом поле будем хранить значение числа с типом данных как float(число с цифрами после запятой), но тип Number подходит также для любых чисел,обычных и с запятой типа float

    createdTime:{type:String,required:true}, // указываем поле,в котором будем хранить значение даты,когда создался комментарий

    // userId:{type:Schema.Types.ObjectId, ref:'User'}, // указываем полю userId(в нем мы будем хранить ссылку на пользователя) тип Schema.Types.ObjectId и указываем ему,что оно будет ссылаться на нашу модель с названием 'User'(ref:'User'),чтобы связать объект комментария из сущности(модели) 'Comment' с объектом пользователя из сущности(модели) 'User',в данном случае не указываем это поле,так как не используем его

    productNameFor:{type:String,required:true}, // указываем полю productNameFor тип String и required:true(то есть оно обязательное),в нем будем хранить название товара,для которого этот комментарий,чтобы потом находить комментарии для конкретного товара по этому полю

    // указываем поле adminReply для объекта ответа от админа для этого комментария,указываем у него поля
    adminReply:{

        text:{type:String}, // указываем поле для самого текста ответа,не указываем ему required:true(то есть оно обязательное),чтобы это поле было не обязательным,так как ответа от админа может и не быть,и это поле может быть пустым

        createdTime:{type:String} // указываем поле,в котором будем хранить значение даты,когда создался этот комментарий,не указываем ему required:true(то есть оно обязательное),чтобы это поле было не обязательным,так как ответа от админа может и не быть,и это поле может быть пустым

    }

})

export default model('Comment',CommentSchema);  // экспортируем модель,которая будет называться 'Comment'(указываем это первым параметром),и построена на основе нашей схемы CommentSchema(передаем ее вторым параметром)